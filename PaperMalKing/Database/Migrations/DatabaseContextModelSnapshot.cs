// <auto-generated />

using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

namespace PaperMalKing.Database.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8");

            modelBuilder.Entity("PaperMalKing.Database.Models.DiscordGuild", b =>
                {
                    b.Property<long>("DiscordGuildId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("PostingChannelId")
                        .HasColumnType("INTEGER");

                    b.HasKey("DiscordGuildId");

                    b.ToTable("DiscordGuilds");
                });

            modelBuilder.Entity("PaperMalKing.Database.Models.DiscordGuildUser", b =>
                {
                    b.Property<long>("DiscordGuildId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("DiscordUserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("DiscordGuildId", "DiscordUserId");

                    b.HasIndex("DiscordUserId");

                    b.ToTable("DiscordGuildUser");
                });

            modelBuilder.Entity("PaperMalKing.Database.Models.DiscordUser", b =>
                {
                    b.Property<long>("DiscordUserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("DiscordUserId");

                    b.ToTable("DiscordUsers");
                });

            modelBuilder.Entity("PaperMalKing.Database.Models.MyAnimeList.MALUser", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("DiscordUserId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("FeaturesEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUpdatedAnimeListTimestamp")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdatedMangaListTimestamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("MyAnimeListUsers");
                });

            modelBuilder.Entity("PaperMalKing.Database.Models.MyAnimeList.MALUserAnimeListColors", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompletedColor")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DroppedColor")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OnHoldColor")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlanToWatchColor")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WatchingColor")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId");

                    b.ToTable("MyAnimeListUserAnimeListColors");
                });

            modelBuilder.Entity("PaperMalKing.Database.Models.MyAnimeList.MALUserFavoriteAnime", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<long>("MALUserUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("StartYear")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MALUserUserId");

                    b.ToTable("MyAnimeListUserFavoriteAnimes");
                });

            modelBuilder.Entity("PaperMalKing.Database.Models.MyAnimeList.MALUserFavoriteCharacter", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FromEntryName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FromEntryUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("MALUserUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MALUserUserId");

                    b.ToTable("MyAnimeListUserFavoriteCharacters");
                });

            modelBuilder.Entity("PaperMalKing.Database.Models.MyAnimeList.MALUserFavoriteManga", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<long>("MALUserUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("StartYear")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MALUserUserId");

                    b.ToTable("MyAnimeListUserFavoriteMangas");
                });

            modelBuilder.Entity("PaperMalKing.Database.Models.MyAnimeList.MALUserFavoritePerson", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<long>("MALUserUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MALUserUserId");

                    b.ToTable("MyAnimeListUserFavoritePersons");
                });

            modelBuilder.Entity("PaperMalKing.Database.Models.MyAnimeList.MALUserMangaListColors", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompletedColor")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DroppedColor")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OnHoldColor")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlanToReadColor")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReadingColor")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId");

                    b.ToTable("MyAnimeListUserMangaListColors");
                });

            modelBuilder.Entity("PaperMalKing.Database.Models.DiscordGuildUser", b =>
                {
                    b.HasOne("PaperMalKing.Database.Models.DiscordGuild", "DiscordGuild")
                        .WithMany("Users")
                        .HasForeignKey("DiscordGuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PaperMalKing.Database.Models.DiscordUser", "DiscordUser")
                        .WithMany("Guilds")
                        .HasForeignKey("DiscordUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PaperMalKing.Database.Models.MyAnimeList.MALUserAnimeListColors", b =>
                {
                    b.HasOne("PaperMalKing.Database.Models.MyAnimeList.MALUser", "MALUser")
                        .WithOne("AnimeListColors")
                        .HasForeignKey("PaperMalKing.Database.Models.MyAnimeList.MALUserAnimeListColors", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PaperMalKing.Database.Models.MyAnimeList.MALUserFavoriteAnime", b =>
                {
                    b.HasOne("PaperMalKing.Database.Models.MyAnimeList.MALUser", "MALUser")
                        .WithMany("FavoriteAnimes")
                        .HasForeignKey("MALUserUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PaperMalKing.Database.Models.MyAnimeList.MALUserFavoriteCharacter", b =>
                {
                    b.HasOne("PaperMalKing.Database.Models.MyAnimeList.MALUser", "MALUser")
                        .WithMany("FavoriteCharacters")
                        .HasForeignKey("MALUserUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PaperMalKing.Database.Models.MyAnimeList.MALUserFavoriteManga", b =>
                {
                    b.HasOne("PaperMalKing.Database.Models.MyAnimeList.MALUser", "MALUser")
                        .WithMany("FavoriteMangas")
                        .HasForeignKey("MALUserUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PaperMalKing.Database.Models.MyAnimeList.MALUserFavoritePerson", b =>
                {
                    b.HasOne("PaperMalKing.Database.Models.MyAnimeList.MALUser", "MALUser")
                        .WithMany("FavoritePersons")
                        .HasForeignKey("MALUserUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PaperMalKing.Database.Models.MyAnimeList.MALUserMangaListColors", b =>
                {
                    b.HasOne("PaperMalKing.Database.Models.MyAnimeList.MALUser", "MALUser")
                        .WithOne("MangaListColors")
                        .HasForeignKey("PaperMalKing.Database.Models.MyAnimeList.MALUserMangaListColors", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
